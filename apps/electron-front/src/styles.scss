@use '@angular/material' as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$default-theme-primary: mat.define-palette(mat.$indigo-palette);
$default-theme-accent: mat.define-palette(mat.$pink-palette);
$default-theme-warn: mat.define-palette(mat.$red-palette);

$layout-color: mat.get-color-from-palette(mat.$gray-palette, 50);

mat.$light-theme-background-palette: (
  status-bar: map_get(mat.$grey-palette, 300),
  app-bar:    map_get(mat.$grey-palette, 100),
  background: $layout-color,
  hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX
  card:       white,
  dialog:     white,
  disabled-button: rgba(black, 0.12),
  raised-button: white,
  focused-button: rgba(black, 0.12),
  selected-button: map_get(mat.$grey-palette, 300),
  selected-disabled-button: map_get(mat.$grey-palette, 400),
  disabled-button-toggle: map_get(mat.$grey-palette, 200),
  unselected-chip: map_get(mat.$grey-palette, 300),
  disabled-list-option: map_get(mat.$grey-palette, 200),
);

// Create the theme object (a Sass map containing all of the palettes).
$default-theme: mat.define-light-theme(
  $default-theme-primary,
  $default-theme-accent,
  $default-theme-warn
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@mixin components-theme($theme) {
  $background: map-get($theme, background);
  $foreground: map-get($theme, foreground);
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);

  .table {
    background: mat.get-color-from-palette($background, card);
  }

  a {
    color: mat.get-color-from-palette($primary);
  }
  .card {
    background-color: mat.get-color-from-palette($background, card);
  }

  .badge-warn {
    background-color: mat.get-color-from-palette($warn);
    color: mat.get-color-from-palette($warn, lighter);
  }
}

@include mat.all-component-themes($default-theme);
@include components-theme($default-theme);

@import 'tailwindcss/base';
@import 'tailwindcss/components';

html,
body {
  height: 100%;
  background-color: #f7f9ff;
}

.responsive-table {
  display: block;
  width: 100%;
  overflow-x: auto;
}

table {
  @apply w-full rounded shadow;
}

table thead tr th {
  @apply border-b-2;
}

table thead tr th,
table tbody tr td {
  @apply px-4 py-4 text-left;
}

table tbody tr td {
  @apply border-b;
}

.card {
  @apply p-4 shadow rounded;
}

.badge {
  @apply py-2 px-4 inline rounded-full;
}

@import 'tailwindcss/utilities';

